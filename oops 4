package sockets;

import java.io.*;  
import java.net.*;  

// Serializable class
class Student implements Serializable {
    private static final long serialVersionUID = 1L; // version control

    private int id;
    private String name;

    public Student(int id, String name) {
        this.id = id;
        this.name = name;
    }

    @Override
    public String toString() {
        return "Student{id=" + id + ", name='" + name + "'}";
    }
}

// Server class
class ObjectServer {
    public static void main(String[] args) {
        try (ServerSocket server = new ServerSocket(5000)) {
            System.out.println("Server started, waiting for client...");

            Socket socket = server.accept(); // wait until client connects
            System.out.println("Client connected.");

            ObjectInputStream ois = new ObjectInputStream(socket.getInputStream());
            Student student = (Student) ois.readObject(); // receive Student object

            System.out.println("Received from client: " + student);

            ois.close();
            socket.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}

// Client class
class ObjectClient {
    public static void main(String[] args) {
        try (Socket socket = new Socket("localhost", 5000)) {
            // Create an object
            Student student = new Student(101, "Alice");

            // Send the object to the server
            ObjectOutputStream oos = new ObjectOutputStream(socket.getOutputStream());
            oos.writeObject(student);
            oos.flush();

            System.out.println("Sent to server: " + student);

            oos.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
